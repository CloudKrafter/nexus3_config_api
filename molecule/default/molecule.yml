---
dependency:
  name: galaxy
  enabled: true
  options:
    collections-file: ../ansible-requirements.yml

driver:
  name: docker

platforms:
  - name: nexus3-oss
    hostname: nexus3-oss
    image: sonatype/nexus3
    pull: true
    pre_build_image: true
    privileged: true
    override_command: false
    published_ports:
      - 8081:8081
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    groups:
      - nexus
    networks: &nexus_networks
      - name: bridge

  - name: s3-storage
    hostname: s3-storage
    image: minio/minio
    pull: true
    pre_build_image: true
    privileged: true
    override_command: true
    command: server /data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: "minioaccesskey"
      MINIO_SECRET_KEY: "miniosecretkey"
    published_ports:
      - 9000:9000
      - 9001:9001
    # Uncomment if you want persistant storage
    # volumes:
    #   - minio_data:/data
    groups:
      - nexus
    networks: *nexus_networks

  - name: slapd-server-mock
    hostname: slapd-server-mock
    image: thoteam/slapd-server-mock:latest
    override_command: false
    pull: true
    pre_build_image: true
    env:
      LDAP_DOMAIN: slapd-server-mock
    groups:
      - mockldap
    networks: *nexus_networks

provisioner:
  name: ansible
  options:
    vvv: True
  collections:
    - community.general
    - community.docker
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
  inventory:
    links:
      group_vars: group_vars/

scenario:
  create_sequence:
    - create
    - prepare
  check_sequence:
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - create
    - prepare
    - converge
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - check
    - verify
    - destroy

verifier:
  name: ansible

role_name_check: 2
