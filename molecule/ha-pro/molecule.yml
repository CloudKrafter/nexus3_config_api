---
dependency:
  name: galaxy
  enabled: true
  options:
    collections-file: ../ansible-requirements.yml

driver:
  name: docker

platforms:
  - name: s3-storage-pro
    hostname: s3-storage-pro
    image: minio/minio
    pull: true
    pre_build_image: true
    privileged: true
    override_command: true
    command: server /data --console-address ":9001"
    # env:
    #   MINIO_ACCESS_KEY: "minioaccesskey"
    #   MINIO_SECRET_KEY: "miniosecretkey"
    published_ports:
      - 9000:9000
      - 9001:9001
    # Uncomment if you want persistant storage
    # volumes:
    #   - minio_data:/data
    groups:
      - nexus
    networks: &nexus_network
      - name: nexus

  - name: slapd-server-mock-pro
    hostname: slapd-server-mock-pro
    image: thoteam/slapd-server-mock:latest
    override_command: false
    pull: true
    pre_build_image: true
    env:
      LDAP_DOMAIN: slapd-server-mock
    groups:
      - mockldap
    networks: *nexus_network

  - name: postgresql-server
    hostname: postgresql-server
    image: postgres:14-bullseye
    pull: true
    pre_build_image: true
    override_command: false
    published_ports:
      - 5432:5432
    env:
      POSTGRES_DB: nexus
      POSTGRES_USER: nexus
      POSTGRES_PASSWORD: nexus
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    groups:
      - postgresql
    networks: *nexus_network

  - name: nexus3-pro
    hostname: nexus3-pro
    image: sonatype/nexus3
    pull: true
    pre_build_image: true
    privileged: true
    override_command: false
    env:
      INSTALL4J_ADD_VM_PARAMS: "-Dnexus.datastore.nexus.advanced=maximumPoolSize=10 -Dnexus.licenseFile=/nexus-data/nexus.lic -Dnexus.datastore.enabled=true -Dnexus.datastore.nexus.jdbcUrl=jdbc:postgresql://postgresql-server:5432/nexus -Dnexus.datastore.nexus.username=nexus -Dnexus.datastore.nexus.password=nexus"
    published_ports:
      - 4081:8081
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    groups:
      - nexus
    networks: *nexus_network
  - name: nexus3-pro-2
    hostname: nexus3-pro-2
    image: sonatype/nexus3
    pull: true
    pre_build_image: true
    privileged: true
    override_command: false
    env:
      INSTALL4J_ADD_VM_PARAMS: "-Dnexus.datastore.nexus.advanced=maximumPoolSize=10 -Dnexus.licenseFile=/nexus-data/nexus.lic -Dnexus.datastore.enabled=true -Dnexus.datastore.nexus.jdbcUrl=jdbc:postgresql://postgresql-server:5432/nexus -Dnexus.datastore.nexus.username=nexus -Dnexus.datastore.nexus.password=nexus"
    published_ports:
      - 4071:8081
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    groups:
      - nexus
    networks: *nexus_network

provisioner:
  name: ansible
  options:
    vvv: True
  collections:
    - community.general
    - community.docker
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
  inventory:
    links:
      group_vars: group_vars/

scenario:
  create_sequence:
    - create
    - prepare
  check_sequence:
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - create
    - prepare
    - converge
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - check
    - verify
    - destroy

verifier:
  name: ansible

role_name_check: 2
