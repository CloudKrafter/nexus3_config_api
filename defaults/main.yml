# defaults file for nexus3-config-as-code
nexus_protocol: http
nexus_hostname: localhost
nexus_port: 8081
nexus_admin_username: admin
nexus_admin_password: changeme
nexus_enable_pro: false

nexus_http_system_settings:
  nonProxyHosts: []
  timeout: 3600
  retries: 6
  httpProxy:
    enabled: true
    host: "proxy.local"
    port: 8085
  httpsProxy:
    enabled: true
    host: "proxy.local"
    port: 8086

nexus_ssl_truststore: []

ldap_connections: []

# Nexus Security Realms
#
# Each realm will be activated and configured in the same order as you listed.
#
# Available security realms:
# - User-Token-Realm
# - NexusAuthenticatingRealm
# - NuGetApiKey
# - ConanToken
# - Crowd
# - DefaultRole
# - DockerToken
# - LdapRealm
# - NpmToken
# - rutauth-realm
# - SamlRealm
nexus_security_realms:
  - NexusAuthenticatingRealm

nexus_blobstores:
  - name: default
    type: File
    path: default
    softQuota:
      type: spaceRemainingQuota
      limit: 104857600 # 100Mb

nexus_repos_cleanup_policies: []

nexus_config_maven: true
nexus_config_docker: true
nexus_config_gitlfs: true
nexus_config_npm: true
nexus_config_pypi: true
nexus_config_conda: true
nexus_config_helm: true
nexus_config_r: true
nexus_config_nuget: true
nexus_config_apt: true
nexus_config_yum: true
nexus_config_raw: true
nexus_config_p2: true
nexus_config_cocoapods: true
nexus_config_conan: true
nexus_config_go: true

__nexus_repos_go_proxy_defaults:
  format: go
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_go_group_defaults:
  online: true
  format: go
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_cocoapods_proxy_defaults:
  format: cocoapods
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_p2_proxy_defaults:
  format: p2
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_raw_hosted_defaults:
  online: true
  format: raw
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_raw_proxy_defaults:
  format: raw
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_raw_group_defaults:
  online: true
  format: raw
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_yum_hosted_defaults:
  online: true
  format: yum
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false
  yum:
    repodataDepth: 5
    deployPolicy: STRICT

__nexus_repos_yum_proxy_defaults:
  format: yum
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  yumSigning:
    keypair: default

__nexus_repos_yum_group_defaults:
  online: true
  format: yum
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []
  yumSigning:
    keypair: default

__nexus_repos_apt_hosted_defaults:
  online: true
  format: apt
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false
  apt:
    distribution: bionic
  aptSigning:
    keypair: default

__nexus_repos_apt_proxy_defaults:
  format: apt
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  apt:
    distribution: bionic
    flat: false

__nexus_repos_nuget_hosted_defaults:
  online: true
  format: nuget
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_nuget_proxy_defaults:
  format: nuget
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  nugetProxy:
    queryCacheItemMaxAge: 3600
    nugetVersion: V3

__nexus_repos_nuget_group_defaults:
  online: true
  format: nuget
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_r_hosted_defaults:
  online: true
  format: r
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_r_proxy_defaults:
  format: r
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_r_group_defaults:
  online: true
  format: r
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_helm_hosted_defaults:
  online: true
  format: helm
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_helm_proxy_defaults:
  format: helm
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_conan_hosted_defaults:
  online: true
  format: conan
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_conan_proxy_defaults:
  format: conan
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  conanProxy:
    conanVersion: V1

__nexus_repos_conda_proxy_defaults:
  format: conda
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false

__nexus_repos_pypi_hosted_defaults:
  online: true
  format: pypi
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_pypi_proxy_defaults:
  format: pypi
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  pypi:
    removeQuarantined: false

__nexus_repos_pypi_group_defaults:
  online: true
  format: pypi
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_npm_hosted_defaults:
  online: true
  format: npm
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_npm_proxy_defaults:
  format: npm
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  npm:
    removeQuarantined: false

__nexus_repos_npm_group_defaults:
  online: true
  format: npm
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_gitlfs_hosted_defaults:
  online: true
  format: gitlfs
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false

__nexus_repos_docker_group_defaults:
  online: true
  format: docker
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []
    writableMember:
  docker:
    v1Enabled: false
    forceBasicAuth: false

__nexus_repos_docker_hosted_defaults:
  online: true
  format: docker
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
    latestPolicy: true
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false
  docker:
    v1Enabled: false
    forceBasicAuth: false
    httpPort: 10000
    httpsPort: 10001
    subdomain:

__nexus_repos_docker_proxy_defaults:
  format: docker
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
  docker:
    v1Enabled: false
    forceBasicAuth: false
  dockerProxy:
    indexType: HUB # HUB, REGISTRY or CUSTOM
    indexUrl: https://index.docker.io
    cacheForeignLayers: false
    foreignLayerUrlWhitelist: []

__nexus_repos_maven_group_defaults:
  online: true
  format: maven2
  type: group
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
  group:
    memberNames: []

__nexus_repos_maven_hosted_defaults:
  online: true
  format: maven2
  type: hosted
  storage:
    blobStoreName: default
    strictContentTypeValidation: false
    writePolicy: allow_once
  cleanup:
    policyNames: []
  component:
    proprietaryComponents: false
  maven:
    versionPolicy: MIXED
    layoutPolicy: STRICT
    contentDisposition: INLINE

__nexus_repos_maven_proxy_defaults:
  format: maven2
  type: proxy
  online: true
  storage:
    blobStoreName: default
    strictContentTypeValidation: true
  cleanup:
    policyNames: []
  proxy:
    remoteUrl: https://remote.repository.com
    contentMaxAge: 1440
    metadataMaxAge: 1440
  negativeCache:
    enabled: true
    timeToLive: 1440
  httpClient:
    blocked: false
    autoBlock: true
    connection:
      retries: 0
      userAgentSuffix: string
      timeout: 60
      enableCircularRedirects: false
      enableCookies: false
      useTrustStore: false
    # authentication:
    #   type:
    #   username:
    #   preemptive:
    #   ntlmHost:
    #   ntlmDomain:
  routingRule:
  replication:
  maven:
    versionPolicy: MIXED
    layoutPolicy: STRICT
    contentDisposition: ATTACHMENT

nexus_repos_go_proxy: []

nexus_repos_go_group: []

nexus_repos_conan_hosted: []

nexus_repos_conan_proxy: []

nexus_repos_cocoapods_proxy: []

nexus_repos_p2_proxy: []

nexus_repos_raw_hosted: []

nexus_repos_raw_proxy: []

nexus_repos_raw_group: []

nexus_repos_yum_hosted: []

nexus_repos_yum_proxy: []

nexus_repos_yum_group: []

nexus_repos_apt_hosted: []

nexus_repos_apt_proxy: []

nexus_repos_r_hosted: []

nexus_repos_r_proxy: []

nexus_repos_r_group: []

nexus_repos_helm_hosted: []

nexus_repos_helm_proxy: []

nexus_repos_conda_proxy: []

nexus_repos_pypi_hosted: []

nexus_repos_pypi_proxy: []

nexus_repos_pypi_group: []

nexus_repos_npm_hosted: []

nexus_repos_npm_proxy: []

nexus_repos_npm_group: []

nexus_repos_gitlfs_hosted: []

nexus_repos_docker_hosted: []

nexus_repos_docker_proxy: []

nexus_repos_docker_group: []

nexus_repos_maven_hosted: []

nexus_repos_maven_proxy: []

nexus_repos_maven_group: []

nexus_routing_rules: []

# Default user password used when creating new users. This is only used if the user does not already exist.
# It will not change the password of an existing user.
nexus_default_user_password: changeme
nexus_users: []

# If you set nexus_enable_pro to true, you must provide a base64 encoded license file
# Either by setting the NEXUS_LICENSE_B64 environment variable or by providing the base64 encoded license string directly below.
nexus_license_b64: "<your Nexus .lic license file encoded into a base64 string>"

nexus_user_tokens_capability:
  enabled: true
  protectContent: true
  expirationEnabled: true
  expirationDays: 30

nexus_anonymous_access:
  enabled: true
  userId: anonymous
  realmName: NexusAuthorizingRealm

nexus_roles:
  - id: "nx-admin"
    name: "nx-admin"
    description: "Administrator Role"
    privileges:
      - "nx-all"
    roles: []
  - id: "nx-anonymous"
    name: "nx-anonymous"
    description: "Anonymous Role"
    privileges:
      - "nx-healthcheck-read"
      - "nx-search-read"
      - "nx-repository-view-*-*-read"
      - "nx-repository-view-*-*-browse"
    roles: []

nexus_content_selectors: []
