---
# include tasks from license-api.yml
- name: Include license-api
  ansible.builtin.include_tasks: license-api.yml
  tags: license

- name: Include security-anonymous-api
  ansible.builtin.include_tasks: security-anonymous-api.yml
  tags: security-anonymous-access

- name: Include user-tokens-api
  ansible.builtin.include_tasks: user-tokens-api.yml
  when: nexus_enable_pro | bool
  tags: user-tokens

- name: Include ssl-truststore-api
  ansible.builtin.include_tasks: ssl-truststore-api.yml
  tags: ssl-truststore

- name: Include LDAP configuration
  ansible.builtin.include_tasks: ldap-tasks.yml
  tags: ldap

- name: Include security-realms-api
  ansible.builtin.include_tasks: security-realms-api.yml
  tags: security-realms

- name: Include http-system-settings-api
  ansible.builtin.include_tasks: http-system-settings-api.yml
  tags: http-system-settings

########### Blobstores ###########

- name: Get all blobstores
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/blobstores"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: all_blobstores
  tags: blobstores

- name: Determine blobstores to create
  ansible.builtin.set_fact:
    nxs_create_blobstores: "{{ nexus_blobstores | rejectattr('name', 'in', all_blobstores.json | map(attribute='name') | list) | list }}"
  tags: blobstores

- name: Determine blobstores to delete
  ansible.builtin.set_fact:
    nxs_delete_blobstores: "{{ all_blobstores.json | rejectattr('name', 'in', nexus_blobstores | map(attribute='name') | list) | list }}"
  tags: blobstores

- name: Show blobstores to create
  ansible.builtin.debug:
    var: nxs_create_blobstores | length
  tags: blobstores

- name: Show blobstores to delete
  ansible.builtin.debug:
    var: nxs_delete_blobstores | length
  tags: blobstores

- name: Create configured Blobstores using Nexus API
  ansible.builtin.include_tasks: blobstores-api.yml
  vars:
    nexus_blobstores: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_blobstores | default([]) }}"
  when: nxs_create_blobstores | length > 0
  tags: blobstores

# - name: Update configured Blobstores using Nexus API
#   ansible.builtin.include_tasks: blobstores-api.yml
#   vars:
#     nexus_roles: "{{ item | default([]) }}"
#     method: PUT
#   with_items:
#     - "{{ nxs_update_blobstores | default([]) }}"
#   when: nxs_update_blobstores | length > 0
#   tags: blobstores

- name: Delete Blobstores using Nexus API
  ansible.builtin.include_tasks: blobstores-api.yml
  vars:
    nexus_blobstores: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_blobstores | default([]) }}"
  when: nxs_delete_blobstores | length > 0
  tags: blobstores

############ End Blobstores ############

########### Roles ###########

- name: Get all Roles
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/security/roles"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nexus_roles__
  tags: roles

- name: Determine roles to create
  ansible.builtin.set_fact:
    nxs_create_roles: "{{ nexus_roles | rejectattr('name', 'in', __nexus_roles__.json | map(attribute='name') | list) | list }}"
  tags: roles

- name: Determine roles to delete
  ansible.builtin.set_fact:
    nxs_delete_roles: "{{ __nexus_roles__.json | rejectattr('name', 'in', nexus_roles | map(attribute='name') | list) | list }}"
  tags: roles

- name: Compare roles for changes
  ansible.builtin.set_fact:
    nxs_update_roles: "{{ nxs_update_roles + [item] }}"
  loop: "{{ nexus_roles | list }}"
  when: >
    ( __nexus_roles__.json | selectattr('id', 'equalto', item.id) | first) is not defined or
    ( __nexus_roles__.json | selectattr('id', 'equalto', item.id) | first).name | default(omit) != item.name | default(omit) or
    ( __nexus_roles__.json | selectattr('id', 'equalto', item.id) | first).description | default(omit) != item.description | default(omit) or
    ( __nexus_roles__.json | selectattr('id', 'equalto', item.id) | first).privileges | default([]) | sort != item.privileges | default([]) | sort or
    ( __nexus_roles__.json | selectattr('id', 'equalto', item.id) | first).roles | default([]) | sort != item.roles | default([]) | sort
  tags: roles

- name: Show nxs_create_roles
  ansible.builtin.debug:
    var: nxs_create_roles | length
  tags: roles

- name: Show nxs_update_roles
  ansible.builtin.debug:
    var: nxs_update_roles | length
  tags: roles

- name: Show nxs_delete_roles
  ansible.builtin.debug:
    var: nxs_delete_roles | length
  tags: roles

- name: Create configured Roles using Nexus API
  ansible.builtin.include_tasks: roles-api.yml
  vars:
    nexus_roles: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_roles | default([]) }}"
  when: nxs_create_roles | length > 0
  tags: roles

- name: Update configured Roles using Nexus API
  ansible.builtin.include_tasks: roles-api.yml
  vars:
    nexus_roles: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nxs_update_roles | default([]) }}"
  when: nxs_update_roles | length > 0
  tags: roles

- name: Delete Roles using Nexus API
  ansible.builtin.include_tasks: roles-api.yml
  vars:
    nexus_roles: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_roles | default([]) }}"
  when: nxs_delete_roles | length > 0
  tags: roles

############ End Roles ############

########### Content Selectors ###########

- name: Get all Content Selectors
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/security/content-selectors"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nxs_cntnt_slctrs__
  tags: content-selectors

- name: Determine content selectors to create
  ansible.builtin.set_fact:
    nxs_create_content_selectors: "{{ nexus_content_selectors | rejectattr('name', 'in', __nxs_cntnt_slctrs__.json | map(attribute='name')) | list }}"
  tags: content-selectors

- name: Determine content selectors to delete
  ansible.builtin.set_fact:
    nxs_delete_content_selectors: "{{ __nxs_cntnt_slctrs__.json | rejectattr('name', 'in', nexus_content_selectors | map(attribute='name') | list) | list }}"
  tags: content-selectors

- name: Compare content selectors for changes
  ansible.builtin.set_fact:
    nxs_update_content_selectors: "{{ nxs_update_content_selectors + [item] }}"
  loop: "{{ nexus_content_selectors | list }}"
  when: >
    ( __nxs_cntnt_slctrs__.json | selectattr('name', 'equalto', item.name) | first) is not defined or
    ( __nxs_cntnt_slctrs__.json | selectattr('name', 'equalto', item.name) | first).description | default(omit) != item.description | default(omit) or
    ( __nxs_cntnt_slctrs__.json | selectattr('name', 'equalto', item.name) | first).type | default(omit) != item.type | default(omit) or
    ( __nxs_cntnt_slctrs__.json | selectattr('name', 'equalto', item.name) | first).expression | default(omit) != item.expression | default(omit)
  tags: content-selectors

- name: Show nxs_create_content_selectors
  ansible.builtin.debug:
    var: nxs_create_content_selectors | length
  tags: content-selectors

- name: Show nxs_update_content_selectors
  ansible.builtin.debug:
    var: nxs_update_content_selectors | length
  tags: content-selectors

- name: Show nxs_delete_content_selectors
  ansible.builtin.debug:
    var: nxs_delete_content_selectors | length
  tags: content-selectors

- name: Create configured Content Selectors using Nexus API
  ansible.builtin.include_tasks: content-selectors-api.yml
  vars:
    selectors: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_content_selectors | default([]) }}"
  when: nxs_create_content_selectors | length > 0
  tags: content-selectors

- name: Update configured Content Selectors using Nexus API
  ansible.builtin.include_tasks: content-selectors-api.yml
  vars:
    selectors: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nxs_update_content_selectors | default([]) }}"
  when: nxs_update_content_selectors | length > 0
  tags: content-selectors

- name: Delete Content Selectors using Nexus API
  ansible.builtin.include_tasks: content-selectors-api.yml
  vars:
    selectors: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_content_selectors | default([]) }}"
  when: nxs_delete_content_selectors | length > 0
  tags: content-selectors

############ End Content Selectors ############

########### Users ############

- name: Get all Users
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/security/users"
    method: GET
    validate_certs: false
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    status_code: 200
  register: __nxs_crnt_usrs__
  tags: users

- name: Determine users to create
  ansible.builtin.set_fact:
    nxs_create_users: "{{ nexus_users | rejectattr('userId', 'in', __nxs_crnt_usrs__.json | map(attribute='userId') | list) | list }}"
  tags: users

- name: Determine users to delete
  ansible.builtin.set_fact:
    nxs_delete_users: "{{ __nxs_crnt_usrs__.json | rejectattr('userId', 'in', nexus_users | map(attribute='userId') | list) | list }}"
  tags: users

- name: Compare users for changes
  ansible.builtin.set_fact:
    nxs_update_users: "{{ nxs_update_users + [item] }}"
  loop: "{{ nexus_users | list }}"
  # TODO: implement AND TEST readOnly attribute
  when: >
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first) is not defined or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).firstName | default(omit) != item.firstName | default(omit) or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).lastName | default(omit) != item.lastName | default(omit) or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).emailAddress | default(omit) != item.emailAddress | default(omit) or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).source | default(omit) != item.source | default(omit) or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).status | default(omit) != item.status | default(omit) or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).roles | default([]) | sort != item.roles | default([]) | sort or
    ( __nxs_crnt_usrs__.json | selectattr('userId', 'equalto', item.userId) | first).externalRoles | default([]) | sort != item.externalRoles | default([]) | sort
  tags: users

- name: Show nxs_create_users
  ansible.builtin.debug:
    var: nxs_create_users | length
  tags: users

- name: Show nxs_update_users
  ansible.builtin.debug:
    var: nxs_update_users | length
  tags: users

- name: Show nxs_delete_users
  ansible.builtin.debug:
    var: nxs_delete_users | length
  tags: users

- name: Create configured Users using Nexus API
  ansible.builtin.include_tasks: users-api.yml
  vars:
    users: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_users | default([]) }}"
  when: nxs_create_users | length > 0
  tags: users

- name: Update configured Users using Nexus API
  ansible.builtin.include_tasks: users-api.yml
  vars:
    users: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nxs_update_users | default([]) }}"
  when: nxs_update_users | length > 0
  tags: users

- name: Delete Users using Nexus API
  ansible.builtin.include_tasks: users-api.yml
  vars:
    users: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_users | default([]) }}"
  when: nxs_delete_users | length > 0
  tags: users

############ End Users ############

############ Cleanup Policies ############

- name: Get all Cleanup policies
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/cleanup-policies"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nxs_crnt_cln_plcy__
  when: nexus_enable_pro | bool
  tags: cleanup-policies

- name: Determine cleanup policies to create
  ansible.builtin.set_fact:
    nxs_create_cleanuppolicies: "{{ nexus_repos_cleanup_policies | rejectattr('name', 'in', __nxs_crnt_cln_plcy__.json | map(attribute='name') | list) | list }}"
  when: nexus_enable_pro | bool
  tags: cleanup-policies

- name: Determine cleanup policies to delete
  ansible.builtin.set_fact:
    nxs_delete_cleanuppolicies: "{{ __nxs_crnt_cln_plcy__.json | rejectattr('name', 'in', nexus_repos_cleanup_policies | map(attribute='name') | list) | list }}"
  when: nexus_enable_pro | bool
  tags: cleanup-policies

- name: Compare cleanup policies for changes
  ansible.builtin.set_fact:
    nxs_update_cleanuppolicies: "{{ nxs_update_cleanuppolicies + [item] }}"
  loop: "{{ nexus_repos_cleanup_policies | list }}"
  when: >
    nexus_enable_pro | bool and (
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first) is not defined or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaLastBlobUpdated | default(omit) != item.criteriaLastBlobUpdated | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaLastDownloaded | default(omit) != item.criteriaLastDownloaded | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaAssetRegex | default(omit) != item.criteriaAssetRegex | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaReleaseType | default(omit) != item.criteriaReleaseType | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).notes | default(omit) != item.notes | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).format | default(omit) != item.format | default(None))
  tags: cleanup-policies

- name: Show nxs_create_cleanuppolicies
  ansible.builtin.debug:
    var: nxs_create_cleanuppolicies | length
  when: nexus_enable_pro | bool
  tags: cleanup-policies

- name: Show nxs_update_cleanuppolicies
  ansible.builtin.debug:
    var: nxs_update_cleanuppolicies | length
  when: nexus_enable_pro | bool
  tags: cleanup-policies

- name: Show nxs_delete_cleanuppolicies
  ansible.builtin.debug:
    var: nxs_delete_cleanuppolicies | length
  when: nexus_enable_pro | bool
  tags: cleanup-policies

- name: Create configured Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies-api.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_cleanuppolicies | default([]) }}"
  when: nxs_create_cleanuppolicies | length > 0 and nexus_enable_pro | bool
  tags: cleanup-policies

- name: Update configured Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies-api.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nxs_update_cleanuppolicies | default([]) }}"
  when: nxs_update_cleanuppolicies | length > 0 and nexus_enable_pro | bool
  tags: cleanup-policies

- name: Delete Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies-api.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_cleanuppolicies | default([]) }}"
  when: nxs_delete_cleanuppolicies | length > 0 and nexus_enable_pro | bool
  tags: cleanup-policies

############ END Cleanup Policies ############

############ Routing Rules ############

- name: Get all routing rules
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/routing-rules"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nxs_crnt_rtng_rls__
  tags: routing-rules

- name: Determine routing rules to create
  ansible.builtin.set_fact:
    nxs_create_routingrules: "{{ nexus_routing_rules | rejectattr('name', 'in', __nxs_crnt_rtng_rls__.json | map(attribute='name') | list) | list }}"
  tags: routing-rules

- name: Determine routing rules to delete
  ansible.builtin.set_fact:
    nxs_delete_routingrules: "{{ __nxs_crnt_rtng_rls__.json | rejectattr('name', 'in', nexus_routing_rules | map(attribute='name') | list) | list }}"
  tags: routing-rules

- name: Compare routing rules for changes
  ansible.builtin.set_fact:
    nxs_update_routingrules: "{{ nxs_update_routingrules + [item] }}"
  loop: "{{ nexus_routing_rules | list }}"
  when: >
    ( __nxs_crnt_rtng_rls__.json | selectattr('name', 'equalto', item.name) | first) is not defined or
    ( __nxs_crnt_rtng_rls__.json | selectattr('name', 'equalto', item.name) | first).description | default(omit) != item.description | default(omit) or
    ( __nxs_crnt_rtng_rls__.json | selectattr('name', 'equalto', item.name) | first).mode | default(omit) != item.mode | default(None) or
    ( __nxs_crnt_rtng_rls__.json | selectattr('name', 'equalto', item.name) | first).matchers | default(omit) != item.matchers | default(omit)
  tags: routing-rules

- name: Show nxs_create_routingrules
  ansible.builtin.debug:
    var: nxs_create_routingrules | length
  tags: routing-rules

- name: Show nxs_update_routingrules
  ansible.builtin.debug:
    var: nxs_update_routingrules | length
  tags: routing-rules

- name: Show nxs_delete_routingrules
  ansible.builtin.debug:
    var: nxs_delete_routingrules | length
  tags: routing-rules

- name: Create configured Routing Rules using Nexus API
  ansible.builtin.include_tasks: routing-rules-api.yml
  vars:
    rules: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nexus_routing_rules | default([]) }}"
  when: nxs_create_routingrules | length > 0
  tags: routing-rules

- name: Update configured Routing Rules using Nexus API
  ansible.builtin.include_tasks: routing-rules-api.yml
  vars:
    rules: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nxs_update_routingrules | default([]) }}"
  when: nxs_update_routingrules | length > 0
  tags: routing-rules

- name: Delete Routing Rules using Nexus API
  ansible.builtin.include_tasks: routing-rules-api.yml
  vars:
    rules: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_routingrules | default([]) }}"
  when: nxs_delete_routingrules | length > 0
  tags: routing-rules

############ END Routing Rules ############

############ Repositories ############

- name: Get all repositories
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/repositorySettings"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nxs_all_repos__
  until: __nxs_all_repos__.status == 200
  retries: 30
  delay: 10

############ Maven Repositories ############

- name: Process definitions for maven
  # test this conditional
  when: nexus_config_maven | bool
  block:
    - name: Apply defaults to maven hosted repos
      ansible.builtin.set_fact:
        nxs_desired_mvn_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_hosted -%}
            {%- set combined_repo = __nexus_repos_maven_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to maven proxy repos
      ansible.builtin.set_fact:
        nxs_desired_mvn_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_proxy -%}
            {%- set combined_repo = __nexus_repos_maven_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to maven group repos
      ansible.builtin.set_fact:
        nxs_desired_mvn_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_group -%}
            {%- set combined_repo = __nexus_repos_maven_group_defaults | combine(repo) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing repositories
  ansible.builtin.set_fact:
    __nxs_crnt_mvn_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'maven2') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_mvn_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'maven2') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_mvn_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'maven2') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_mvn_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_mvn_hstd__

- name: Show __nxs_crnt_mvn_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_mvn_prxy__

- name: Show __nxs_crnt_mvn_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_mvn_grp__

- name: Determine repositories to create
  ansible.builtin.set_fact:
    nxs_create_mvn_hosted_repos: "{{ nxs_desired_mvn_hosted_repos | rejectattr('name', 'in', __nxs_crnt_mvn_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_mvn_proxy_repos: "{{ nxs_desired_mvn_proxy_repos | rejectattr('name', 'in', __nxs_crnt_mvn_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_mvn_group_repos: "{{ nxs_desired_mvn_group_repos | rejectattr('name', 'in', __nxs_crnt_mvn_grp__ | map(attribute='name') | list) | list }}"

- name: Determine repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_mvn_hosted_repos: "{{ __nxs_crnt_mvn_hstd__ | rejectattr('name', 'in', nxs_desired_mvn_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_mvn_proxy_repos: "{{ __nxs_crnt_mvn_prxy__ | rejectattr('name', 'in', nxs_desired_mvn_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_mvn_group_repos: "{{ __nxs_crnt_mvn_grp__ | rejectattr('name', 'in', nxs_desired_mvn_group_repos | map(attribute='name') | list) | list }}"

- name: Compare maven hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_mvn_hosted_repos: "{{ nxs_update_mvn_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_mvn_hosted_repos | list }}"
  when: >
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('maven2') != item.format | default('maven2') or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).maven.versionPolicy | default(omit) != item.maven.versionPolicy | default(None) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).maven.layoutPolicy | default(omit) != item.maven.layoutPolicy | default(None) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).maven.contentDisposition | default(omit) != item.maven.contentDisposition | default(None) or
    (__nxs_crnt_mvn_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare maven proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_mvn_proxy_repos: "{{ nxs_update_mvn_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_mvn_proxy_repos | list }}"
  # TODO: implement replication and authentication
  when: >
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('maven2') != item.format | default('maven2') or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(omit) != item.httpClient.connection.enableCircularRedirects | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).maven.versionPolicy | default(omit) != item.maven.versionPolicy | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).maven.layoutPolicy | default(omit) != item.maven.layoutPolicy | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).maven.contentDisposition | default(omit) != item.maven.contentDisposition | default(None) or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_mvn_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare maven group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_mvn_group_repos: "{{ nxs_update_mvn_group_repos + [item] }}"
  loop: "{{ nxs_desired_mvn_group_repos | list }}"
  when: >
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('maven2') != item.format | default('maven2') or
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_mvn_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([])

- name: Show nxs_create_mvn_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_mvn_hosted_repos | length

- name: Show nxs_update_mvn_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_mvn_hosted_repos | length

- name: Show nxs_delete_mvn_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_mvn_hosted_repos | length

- name: Show nxs_create_mvn_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_mvn_proxy_repos | length

- name: Show nxs_update_mvn_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_mvn_proxy_repos | length

- name: Show nxs_delete_mvn_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_mvn_proxy_repos | length

- name: Show nxs_create_mvn_group_repos
  ansible.builtin.debug:
    var: nxs_create_mvn_group_repos | length

- name: Show nxs_update_mvn_group_repos
  ansible.builtin.debug:
    var: nxs_update_mvn_group_repos | length

- name: Show nxs_delete_mvn_group_repos
  ansible.builtin.debug:
    var: nxs_delete_mvn_group_repos | length

- name: Create configured Maven Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_mvn_hosted_repos | default([]) }}"
  when: nxs_create_mvn_hosted_repos | length > 0

- name: Create configured Maven Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_mvn_proxy_repos | default([]) }}"
  when: nxs_create_mvn_proxy_repos | length > 0

- name: Create configured Maven Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_mvn_group_repos | default([]) }}"
  when: nxs_create_mvn_group_repos | length > 0

- name: Update configured Maven Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_mvn_hosted_repos | default([]) }}"
  when: nxs_update_mvn_hosted_repos | length > 0

- name: Update configured Maven Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_mvn_proxy_repos | default([]) }}"
  when: nxs_update_mvn_proxy_repos | length > 0

- name: Update configured Maven Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_mvn_group_repos | default([]) }}"
  when: nxs_update_mvn_group_repos | length > 0

- name: Delete Maven Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_mvn_hosted_repos | default([]) }}"
    format: maven
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_mvn_hosted_repos | default([]) }}"
  when: nxs_delete_mvn_hosted_repos | length > 0

- name: Delete Maven Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_mvn_proxy_repos | default([]) }}"
    format: maven
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_mvn_proxy_repos | default([]) }}"
  when: nxs_delete_mvn_proxy_repos | length > 0

- name: Delete Maven Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_mvn_group_repos | default([]) }}"
    format: maven
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_mvn_group_repos | default([]) }}"
  when: nxs_delete_mvn_group_repos | length > 0

############ End Maven Repositories ############

############ Docker Repositories ############

- name: Process definitions for docker
  # test this conditional
  when: nexus_config_docker | bool
  block:
    - name: Apply defaults to docker hosted repos
      ansible.builtin.set_fact:
        nxs_desired_docker_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_docker_hosted -%}
            {%- set combined_repo = __nexus_repos_docker_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to docker proxy repos
      ansible.builtin.set_fact:
        nxs_desired_docker_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_docker_proxy -%}
            {%- set combined_repo = __nexus_repos_docker_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to docker group repos
      ansible.builtin.set_fact:
        nxs_desired_docker_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_docker_group -%}
            {%- set combined_repo = __nexus_repos_docker_group_defaults | combine(repo) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing Docker repositories
  ansible.builtin.set_fact:
    __nxs_crnt_docker_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'docker') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_docker_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'docker') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_docker_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'docker') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_docker_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_docker_hstd__

- name: Show __nxs_crnt_docker_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_docker_prxy__

- name: Show __nxs_crnt_docker_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_docker_grp__

- name: Determine Docker repositories to create
  ansible.builtin.set_fact:
    nxs_create_docker_hosted_repos: "{{ nxs_desired_docker_hosted_repos | rejectattr('name', 'in', __nxs_crnt_docker_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_docker_proxy_repos: "{{ nxs_desired_docker_proxy_repos | rejectattr('name', 'in', __nxs_crnt_docker_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_docker_group_repos: "{{ nxs_desired_docker_group_repos | rejectattr('name', 'in', __nxs_crnt_docker_grp__ | map(attribute='name') | list) | list }}"

- name: Determine Docker repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_docker_hosted_repos: "{{ __nxs_crnt_docker_hstd__ | rejectattr('name', 'in', nxs_desired_docker_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_docker_proxy_repos: "{{ __nxs_crnt_docker_prxy__ | rejectattr('name', 'in', nxs_desired_docker_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_docker_group_repos: "{{ __nxs_crnt_docker_grp__ | rejectattr('name', 'in', nxs_desired_docker_group_repos | map(attribute='name') | list) | list }}"

- name: Compare Docker hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_docker_hosted_repos: "{{ nxs_update_docker_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_docker_hosted_repos | list }}"
  when: >
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('docker') != item.format | default('docker') or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.latestPolicy | default(false) != item.storage.latestPolicy | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.v1Enabled | default(false) != item.docker.v1Enabled | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.forceBasicAuth | default(false) != item.docker.forceBasicAuth | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.httpPort | default(omit) != item.docker.httpPort | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.httpsPort | default(omit) != item.docker.httpsPort | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.subdomain | default(omit) != item.docker.subdomain | default(None)

- name: Compare Docker proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_docker_proxy_repos: "{{ nxs_update_docker_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_docker_proxy_repos | list }}"
  # TODO: implement replication and authentication
  when: >
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('docker') != item.format | default('docker') or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.v1Enabled | default(false) != item.docker.v1Enabled | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.forceBasicAuth | default(false) != item.docker.forceBasicAuth | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.httpPort | default(omit) != item.docker.httpPort | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.httpsPort | default(omit) != item.docker.httpsPort | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.subdomain | default(omit) != item.docker.subdomain | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.indexType | default(omit) != item.dockerProxy.indexType | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.indexUrl | default(omit) != item.dockerProxy.indexUrl | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.cacheForeignLayers | default(false) != item.dockerProxy.cacheForeignLayers | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.foreignLayerUrlWhitelist | default([]) != item.dockerProxy.foreignLayerUrlWhitelist | default([]) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare Docker group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_docker_group_repos: "{{ nxs_update_docker_group_repos + [item] }}"
  loop: "{{ nxs_desired_docker_group_repos | list }}"
  when: >
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('docker') != item.format | default('docker') or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([]) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).group.writableMember | default(omit) != item.group.writableMember | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.v1Enabled | default(false) != item.docker.v1Enabled | default(false) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.forceBasicAuth | default(false) != item.docker.forceBasicAuth | default(false) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.httpPort | default(omit) != item.docker.httpPort | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.httpsPort | default(omit) != item.docker.httpsPort | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.subdomain | default(omit) != item.docker.subdomain | default(None)

- name: Show nxs_create_docker_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_docker_hosted_repos | length

- name: Show nxs_update_docker_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_docker_hosted_repos | length

- name: Show nxs_delete_docker_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_docker_hosted_repos | length

- name: Show nxs_create_docker_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_docker_proxy_repos | length

- name: Show nxs_update_docker_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_docker_proxy_repos | length

- name: Show nxs_delete_docker_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_docker_proxy_repos | length

- name: Show nxs_create_docker_group_repos
  ansible.builtin.debug:
    var: nxs_create_docker_group_repos | length

- name: Show nxs_update_docker_group_repos
  ansible.builtin.debug:
    var: nxs_update_docker_group_repos | length

- name: Show nxs_delete_docker_group_repos
  ansible.builtin.debug:
    var: nxs_delete_docker_group_repos | length

- name: Create configured Docker Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_docker_hosted_repos | default([]) }}"
  when: nxs_create_docker_hosted_repos | length > 0

- name: Create configured Docker Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_docker_proxy_repos | default([]) }}"
  when: nxs_create_docker_proxy_repos | length > 0

- name: Create configured Docker Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_docker_group_repos | default([]) }}"
  when: nxs_create_docker_group_repos | length > 0

- name: Update configured Docker Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_docker_hosted_repos | default([]) }}"
  when: nxs_update_docker_hosted_repos | length > 0

- name: Update configured Docker Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_docker_proxy_repos | default([]) }}"
  when: nxs_update_docker_proxy_repos | length > 0

- name: Update configured Docker Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_docker_group_repos | default([]) }}"
  when: nxs_update_docker_group_repos | length > 0

- name: Delete Docker Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_docker_hosted_repos | default([]) }}"
    format: docker
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_docker_hosted_repos | default([]) }}"
  when: nxs_delete_docker_hosted_repos | length > 0

- name: Delete Docker Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_docker_proxy_repos | default([]) }}"
    format: docker
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_docker_proxy_repos | default([]) }}"
  when: nxs_delete_docker_proxy_repos | length > 0

- name: Delete Docker Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_docker_group_repos | default([]) }}"
    format: docker
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_docker_group_repos | default([]) }}"
  when: nxs_delete_docker_group_repos | length > 0
############ End Docker Repositories ############

############ GitLFS Repositories ############

- name: Process definitions for gitlfs
  # test this conditional
  when: nexus_config_gitlfs | bool
  block:
    - name: Apply defaults to gitlfs hosted repos
      ansible.builtin.set_fact:
        nxs_desired_gitlfs_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_gitlfs_hosted -%}
            {%- set combined_repo = __nexus_repos_gitlfs_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing GitLFS repositories
  ansible.builtin.set_fact:
    __nxs_crnt_gitlfs_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'gitlfs') | selectattr('type', 'equalto', 'hosted') | list }}"

- name: Show __nxs_crnt_gitlfs_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_gitlfs_hstd__

- name: Determine GitLFS repositories to create
  ansible.builtin.set_fact:
    nxs_create_gitlfs_hosted_repos: "{{ nxs_desired_gitlfs_hosted_repos | rejectattr('name', 'in', __nxs_crnt_gitlfs_hstd__ | map(attribute='name') | list) | list }}"

- name: Determine GitLFS repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_gitlfs_hosted_repos: "{{ __nxs_crnt_gitlfs_hstd__ | rejectattr('name', 'in', nxs_desired_gitlfs_hosted_repos | map(attribute='name') | list) | list }}"

- name: Compare GitLFS hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_gitlfs_hosted_repos: "{{ nxs_update_gitlfs_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_gitlfs_hosted_repos | list }}"
  when: >
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('gitlfs') != item.format | default('gitlfs') or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Show nxs_create_gitlfs_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_gitlfs_hosted_repos | length

- name: Show nxs_update_gitlfs_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_gitlfs_hosted_repos | length

- name: Show nxs_delete_gitlfs_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_gitlfs_hosted_repos | length

- name: Create configured GitLFS Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: gitlfs
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_gitlfs_hosted_repos | default([]) }}"
  when: nxs_create_gitlfs_hosted_repos | length > 0

- name: Update configured GitLFS Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: gitlfs
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_gitlfs_hosted_repos | default([]) }}"
  when: nxs_update_gitlfs_hosted_repos | length > 0

- name: Delete GitLFS Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_gitlfs_hosted_repos | default([]) }}"
    format: gitlfs
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_gitlfs_hosted_repos | default([]) }}"
  when: nxs_delete_gitlfs_hosted_repos | length > 0
############ End GitLFS Repositories ############

############ NPM Repositories ############

- name: Process definitions for npm
  # test this conditional
  when: nexus_config_npm | bool
  block:
    - name: Apply defaults to npm hosted repos
      ansible.builtin.set_fact:
        nxs_desired_npm_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_npm_hosted -%}
            {%- set combined_repo = __nexus_repos_npm_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to npm proxy repos
      ansible.builtin.set_fact:
        nxs_desired_npm_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_npm_proxy -%}
            {%- set combined_repo = __nexus_repos_npm_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to npm group repos
      ansible.builtin.set_fact:
        nxs_desired_npm_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_npm_group -%}
            {%- set combined_repo = __nexus_repos_npm_group_defaults | combine(repo) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing NPM repositories
  ansible.builtin.set_fact:
    __nxs_crnt_npm_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'npm') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_npm_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'npm') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_npm_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'npm') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_npm_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_npm_hstd__

- name: Show __nxs_crnt_npm_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_npm_prxy__

- name: Show __nxs_crnt_npm_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_npm_grp__

- name: Determine NPM repositories to create
  ansible.builtin.set_fact:
    nxs_create_npm_hosted_repos: "{{ nxs_desired_npm_hosted_repos | rejectattr('name', 'in', __nxs_crnt_npm_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_npm_proxy_repos: "{{ nxs_desired_npm_proxy_repos | rejectattr('name', 'in', __nxs_crnt_npm_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_npm_group_repos: "{{ nxs_desired_npm_group_repos | rejectattr('name', 'in', __nxs_crnt_npm_grp__ | map(attribute='name') | list) | list }}"

- name: Determine NPM repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_npm_hosted_repos: "{{ __nxs_crnt_npm_hstd__ | rejectattr('name', 'in', nxs_desired_npm_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_npm_proxy_repos: "{{ __nxs_crnt_npm_prxy__ | rejectattr('name', 'in', nxs_desired_npm_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_npm_group_repos: "{{ __nxs_crnt_npm_grp__ | rejectattr('name', 'in', nxs_desired_npm_group_repos | map(attribute='name') | list) | list }}"

- name: Compare NPM hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_npm_hosted_repos: "{{ nxs_update_npm_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_npm_hosted_repos | list }}"
  when: >
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('npm') != item.format | default('npm') or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_npm_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare NPM proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_npm_proxy_repos: "{{ nxs_update_npm_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_npm_proxy_repos | list }}"
  # TODO: implement replication and authentication
  when: >
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('npm') != item.format | default('npm') or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None) or
    (__nxs_crnt_npm_prxy__ | selectattr('name', 'equalto', item.name) | first).npm.removeQuarantined | default(false) != item.npm.removeQuarantined | default(false)

- name: Compare NPM group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_npm_group_repos: "{{ nxs_update_npm_group_repos + [item] }}"
  loop: "{{ nxs_desired_npm_group_repos | list }}"
  when: >
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('npm') != item.format | default('npm') or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([]) or
    (__nxs_crnt_npm_grp__ | selectattr('name', 'equalto', item.name) | first).group.writableMember | default(omit) != item.group.writableMember | default(None)

- name: Show nxs_create_npm_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_npm_hosted_repos | length

- name: Show nxs_update_npm_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_npm_hosted_repos | length

- name: Show nxs_delete_npm_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_npm_hosted_repos | length

- name: Show nxs_create_npm_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_npm_proxy_repos | length

- name: Show nxs_update_npm_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_npm_proxy_repos | length

- name: Show nxs_delete_npm_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_npm_proxy_repos | length

- name: Show nxs_create_npm_group_repos
  ansible.builtin.debug:
    var: nxs_create_npm_group_repos | length

- name: Show nxs_update_npm_group_repos
  ansible.builtin.debug:
    var: nxs_update_npm_group_repos | length

- name: Show nxs_delete_npm_group_repos
  ansible.builtin.debug:
    var: nxs_delete_npm_group_repos | length

- name: Create configured NPM Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: npm
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_npm_hosted_repos | default([]) }}"
  when: nxs_create_npm_hosted_repos | length > 0

- name: Create configured NPM Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: npm
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_npm_proxy_repos | default([]) }}"
  when: nxs_create_npm_proxy_repos | length > 0

- name: Create configured NPM Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: npm
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_npm_group_repos | default([]) }}"
  when: nxs_create_npm_group_repos | length > 0

- name: Update configured NPM Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: npm
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_npm_hosted_repos | default([]) }}"
  when: nxs_update_npm_hosted_repos | length > 0

- name: Update configured NPM Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: npm
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_npm_proxy_repos | default([]) }}"
  when: nxs_update_npm_proxy_repos | length > 0

- name: Update configured NPM Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: npm
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_npm_group_repos | default([]) }}"
  when: nxs_update_npm_group_repos | length > 0

- name: Delete NPM Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_npm_hosted_repos | default([]) }}"
    format: npm
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_npm_hosted_repos | default([]) }}"
  when: nxs_delete_npm_hosted_repos | length > 0

- name: Delete NPM Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_npm_proxy_repos | default([]) }}"
    format: npm
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_npm_proxy_repos | default([]) }}"
  when: nxs_delete_npm_proxy_repos | length > 0

- name: Delete NPM Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_npm_group_repos | default([]) }}"
    format: npm
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_npm_group_repos | default([]) }}"
  when: nxs_delete_npm_group_repos | length > 0
############ End NPM Repositories ############

############ PyPi Repositories ############

- name: Process definitions for pypi
  # test this conditional
  when: nexus_config_pypi | bool
  block:
    - name: Apply defaults to pypi hosted repos
      ansible.builtin.set_fact:
        nxs_desired_pypi_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_pypi_hosted -%}
            {%- set combined_repo = __nexus_repos_pypi_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to pypi proxy repos
      ansible.builtin.set_fact:
        nxs_desired_pypi_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_pypi_proxy -%}
            {%- set combined_repo = __nexus_repos_pypi_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to pypi group repos
      ansible.builtin.set_fact:
        nxs_desired_pypi_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_pypi_group -%}
            {%- set combined_repo = __nexus_repos_pypi_group_defaults | combine(repo) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing PyPi repositories
  ansible.builtin.set_fact:
    __nxs_crnt_pypi_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'pypi') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_pypi_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'pypi') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_pypi_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'pypi') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_pypi_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_pypi_hstd__

- name: Show __nxs_crnt_pypi_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_pypi_prxy__

- name: Show __nxs_crnt_pypi_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_pypi_grp__

- name: Determine PyPi repositories to create
  ansible.builtin.set_fact:
    nxs_create_pypi_hosted_repos: "{{ nxs_desired_pypi_hosted_repos | rejectattr('name', 'in', __nxs_crnt_pypi_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_pypi_proxy_repos: "{{ nxs_desired_pypi_proxy_repos | rejectattr('name', 'in', __nxs_crnt_pypi_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_pypi_group_repos: "{{ nxs_desired_pypi_group_repos | rejectattr('name', 'in', __nxs_crnt_pypi_grp__ | map(attribute='name') | list) | list }}"

- name: Determine PyPi repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_pypi_hosted_repos: "{{ __nxs_crnt_pypi_hstd__ | rejectattr('name', 'in', nxs_desired_pypi_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_pypi_proxy_repos: "{{ __nxs_crnt_pypi_prxy__ | rejectattr('name', 'in', nxs_desired_pypi_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_pypi_group_repos: "{{ __nxs_crnt_pypi_grp__ | rejectattr('name', 'in', nxs_desired_pypi_group_repos | map(attribute='name') | list) | list }}"

- name: Compare PyPi hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_pypi_hosted_repos: "{{ nxs_update_pypi_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_pypi_hosted_repos | list }}"
  when: >
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('pypi') != item.format | default('pypi') or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_pypi_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare PyPi proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_pypi_proxy_repos: "{{ nxs_update_pypi_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_pypi_proxy_repos | list }}"
  when: >
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('pypi') != item.format | default('pypi') or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None) or
    (__nxs_crnt_pypi_prxy__ | selectattr('name', 'equalto', item.name) | first).pypi.removeQuarantined | default(false) != item.pypi.removeQuarantined | default(false)

- name: Compare PyPi group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_pypi_group_repos: "{{ nxs_update_pypi_group_repos + [item] }}"
  loop: "{{ nxs_desired_pypi_group_repos | list }}"
  when: >
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('pypi') != item.format | default('pypi') or
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_pypi_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([])

- name: Show nxs_create_pypi_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_pypi_hosted_repos | length

- name: Show nxs_update_pypi_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_pypi_hosted_repos | length

- name: Show nxs_delete_pypi_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_pypi_hosted_repos | length

- name: Show nxs_create_pypi_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_pypi_proxy_repos | length

- name: Show nxs_update_pypi_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_pypi_proxy_repos | length

- name: Show nxs_delete_pypi_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_pypi_proxy_repos | length

- name: Show nxs_create_pypi_group_repos
  ansible.builtin.debug:
    var: nxs_create_pypi_group_repos | length

- name: Show nxs_update_pypi_group_repos
  ansible.builtin.debug:
    var: nxs_update_pypi_group_repos | length

- name: Show nxs_delete_pypi_group_repos
  ansible.builtin.debug:
    var: nxs_delete_pypi_group_repos | length

- name: Create configured PyPi Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: pypi
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_pypi_hosted_repos | default([]) }}"
  when: nxs_create_pypi_hosted_repos | length > 0

- name: Create configured PyPi Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: pypi
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_pypi_proxy_repos | default([]) }}"
  when: nxs_create_pypi_proxy_repos | length > 0

- name: Create configured PyPi Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: pypi
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_pypi_group_repos | default([]) }}"
  when: nxs_create_pypi_group_repos | length > 0

- name: Update configured PyPi Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: pypi
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_pypi_hosted_repos | default([]) }}"
  when: nxs_update_pypi_hosted_repos | length > 0

- name: Update configured PyPi Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: pypi
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_pypi_proxy_repos | default([]) }}"
  when: nxs_update_pypi_proxy_repos | length > 0

- name: Update configured PyPi Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: pypi
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_pypi_group_repos | default([]) }}"
  when: nxs_update_pypi_group_repos | length > 0

- name: Delete PyPi Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_pypi_hosted_repos | default([]) }}"
    format: pypi
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_pypi_hosted_repos | default([]) }}"
  when: nxs_delete_pypi_hosted_repos | length > 0

- name: Delete PyPi Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_pypi_proxy_repos | default([]) }}"
    format: pypi
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_pypi_proxy_repos | default([]) }}"
  when: nxs_delete_pypi_proxy_repos | length > 0

- name: Delete PyPi Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_pypi_group_repos | default([]) }}"
    format: pypi
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_pypi_group_repos | default([]) }}"
  when: nxs_delete_pypi_group_repos | length > 0
############ End PyPi Repositories ############

############ Conda Proxy Repositories ############

- name: Process definitions for conda
  # test this conditional
  when: nexus_config_conda | bool
  block:
    - name: Apply defaults to conda proxy repos
      ansible.builtin.set_fact:
        nxs_desired_conda_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_conda_proxy -%}
            {%- set combined_repo = __nexus_repos_conda_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing Conda repositories
  ansible.builtin.set_fact:
    __nxs_crnt_conda_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'conda') | selectattr('type', 'equalto', 'proxy') | list }}"

- name: Show __nxs_crnt_conda_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_conda_prxy__

- name: Determine Conda repositories to create
  ansible.builtin.set_fact:
    nxs_create_conda_proxy_repos: "{{ nxs_desired_conda_proxy_repos | rejectattr('name', 'in', __nxs_crnt_conda_prxy__ | map(attribute='name') | list) | list }}"

- name: Determine Conda repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_conda_proxy_repos: "{{ __nxs_crnt_conda_prxy__ | rejectattr('name', 'in', nxs_desired_conda_proxy_repos | map(attribute='name') | list) | list }}"

- name: Compare Conda proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_conda_proxy_repos: "{{ nxs_update_conda_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_conda_proxy_repos | list }}"
  when: >
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('conda') != item.format | default('conda') or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_conda_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Show nxs_create_conda_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_conda_proxy_repos | length

- name: Show nxs_update_conda_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_conda_proxy_repos | length

- name: Show nxs_delete_conda_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_conda_proxy_repos | length

- name: Create configured Conda Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: conda
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_conda_proxy_repos | default([]) }}"
  when: nxs_create_conda_proxy_repos | length > 0

- name: Update configured Conda Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: conda
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_conda_proxy_repos | default([]) }}"
  when: nxs_update_conda_proxy_repos | length > 0

- name: Delete Conda Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_conda_proxy_repos | default([]) }}"
    format: conda
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_conda_proxy_repos | default([]) }}"
  when: nxs_delete_conda_proxy_repos | length > 0
############ End Conda Proxy Repositories ############

############ Helm hosted and proxy Repositories ############

- name: Process definitions for helm
  # test this conditional
  when: nexus_config_helm | bool
  block:
    - name: Apply defaults to helm hosted repos
      ansible.builtin.set_fact:
        nxs_desired_helm_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_helm_hosted -%}
            {%- set combined_repo = __nexus_repos_helm_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to helm proxy repos
      ansible.builtin.set_fact:
        nxs_desired_helm_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_helm_proxy -%}
            {%- set combined_repo = __nexus_repos_helm_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing Helm repositories
  ansible.builtin.set_fact:
    __nxs_crnt_helm_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'helm') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_helm_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'helm') | selectattr('type', 'equalto', 'proxy') | list }}"

- name: Show __nxs_crnt_helm_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_helm_hstd__

- name: Show __nxs_crnt_helm_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_helm_prxy__

- name: Determine Helm repositories to create
  ansible.builtin.set_fact:
    nxs_create_helm_hosted_repos: "{{ nxs_desired_helm_hosted_repos | rejectattr('name', 'in', __nxs_crnt_helm_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_helm_proxy_repos: "{{ nxs_desired_helm_proxy_repos | rejectattr('name', 'in', __nxs_crnt_helm_prxy__ | map(attribute='name') | list) | list }}"

- name: Determine Helm repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_helm_hosted_repos: "{{ __nxs_crnt_helm_hstd__ | rejectattr('name', 'in', nxs_desired_helm_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_helm_proxy_repos: "{{ __nxs_crnt_helm_prxy__ | rejectattr('name', 'in', nxs_desired_helm_proxy_repos | map(attribute='name') | list) | list }}"

- name: Compare Helm hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_helm_hosted_repos: "{{ nxs_update_helm_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_helm_hosted_repos | list }}"
  when: >
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('helm') != item.format | default('helm') or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_helm_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare Helm proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_helm_proxy_repos: "{{ nxs_update_helm_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_helm_proxy_repos | list }}"
  when: >
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('helm') != item.format | default('helm') or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_helm_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Show nxs_create_helm_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_helm_hosted_repos | length

- name: Show nxs_update_helm_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_helm_hosted_repos | length

- name: Show nxs_delete_helm_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_helm_hosted_repos | length

- name: Show nxs_create_helm_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_helm_proxy_repos | length

- name: Show nxs_update_helm_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_helm_proxy_repos | length

- name: Show nxs_delete_helm_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_helm_proxy_repos | length

- name: Create configured Helm Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: helm
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_helm_hosted_repos | default([]) }}"
  when: nxs_create_helm_hosted_repos | length > 0

- name: Create configured Helm Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: helm
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_helm_proxy_repos | default([]) }}"
  when: nxs_create_helm_proxy_repos | length > 0

- name: Update configured Helm Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: helm
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_helm_hosted_repos | default([]) }}"
  when: nxs_update_helm_hosted_repos | length > 0

- name: Update configured Helm Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: helm
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_helm_proxy_repos | default([]) }}"
  when: nxs_update_helm_proxy_repos | length > 0

- name: Delete Helm Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_helm_hosted_repos | default([]) }}"
    format: helm
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_helm_hosted_repos | default([]) }}"
  when: nxs_delete_helm_hosted_repos | length > 0

- name: Delete Helm Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_helm_proxy_repos | default([]) }}"
    format: helm
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_helm_proxy_repos | default([]) }}"
  when: nxs_delete_helm_proxy_repos | length > 0
############ End Helm hosted and proxy Repositories ############

############ R hosted, proxy and group Repositories ############

- name: Process definitions for R
  # test this conditional
  when: nexus_config_r | bool
  block:
    - name: Apply defaults to R hosted repos
      ansible.builtin.set_fact:
        nxs_desired_r_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_r_hosted -%}
            {%- set combined_repo = __nexus_repos_r_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to R proxy repos
      ansible.builtin.set_fact:
        nxs_desired_r_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_r_proxy -%}
            {%- set combined_repo = __nexus_repos_r_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to R group repos
      ansible.builtin.set_fact:
        nxs_desired_r_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_r_group -%}
            {%- set combined_repo = __nexus_repos_r_group_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing R repositories
  ansible.builtin.set_fact:
    __nxs_crnt_r_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'r') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_r_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'r') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_r_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'r') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_r_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_r_hstd__

- name: Show __nxs_crnt_r_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_r_prxy__

- name: Show __nxs_crnt_r_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_r_grp__

- name: Determine R repositories to create
  ansible.builtin.set_fact:
    nxs_create_r_hosted_repos: "{{ nxs_desired_r_hosted_repos | rejectattr('name', 'in', __nxs_crnt_r_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_r_proxy_repos: "{{ nxs_desired_r_proxy_repos | rejectattr('name', 'in', __nxs_crnt_r_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_r_group_repos: "{{ nxs_desired_r_group_repos | rejectattr('name', 'in', __nxs_crnt_r_grp__ | map(attribute='name') | list) | list }}"

- name: Determine R repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_r_hosted_repos: "{{ __nxs_crnt_r_hstd__ | rejectattr('name', 'in', nxs_desired_r_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_r_proxy_repos: "{{ __nxs_crnt_r_prxy__ | rejectattr('name', 'in', nxs_desired_r_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_r_group_repos: "{{ __nxs_crnt_r_grp__ | rejectattr('name', 'in', nxs_desired_r_group_repos | map(attribute='name') | list) | list }}"

- name: Compare R hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_r_hosted_repos: "{{ nxs_update_r_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_r_hosted_repos | list }}"
  when: >
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('r') != item.format | default('r') or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_r_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare R proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_r_proxy_repos: "{{ nxs_update_r_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_r_proxy_repos | list }}"
  when: >
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('r') != item.format | default('r') or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_r_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare R group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_r_group_repos: "{{ nxs_update_r_group_repos + [item] }}"
  loop: "{{ nxs_desired_r_group_repos | list }}"
  when: >
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('r') != item.format | default('r') or
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_r_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([])

- name: Show nxs_create_r_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_r_hosted_repos | length

- name: Show nxs_update_r_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_r_hosted_repos | length

- name: Show nxs_delete_r_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_r_hosted_repos | length

- name: Show nxs_create_r_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_r_proxy_repos | length

- name: Show nxs_update_r_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_r_proxy_repos | length

- name: Show nxs_delete_r_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_r_proxy_repos | length

- name: Show nxs_create_r_group_repos
  ansible.builtin.debug:
    var: nxs_create_r_group_repos | length

- name: Show nxs_update_r_group_repos
  ansible.builtin.debug:
    var: nxs_update_r_group_repos | length

- name: Show nxs_delete_r_group_repos
  ansible.builtin.debug:
    var: nxs_delete_r_group_repos | length

- name: Create configured R Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: r
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_r_hosted_repos | default([]) }}"
  when: nxs_create_r_hosted_repos | length > 0

- name: Create configured R Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: r
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_r_proxy_repos | default([]) }}"
  when: nxs_create_r_proxy_repos | length > 0

- name: Create configured R Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: r
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_r_group_repos | default([]) }}"
  when: nxs_create_r_group_repos | length > 0

- name: Update configured R Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: r
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_r_hosted_repos | default([]) }}"
  when: nxs_update_r_hosted_repos | length > 0

- name: Update configured R Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: r
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_r_proxy_repos | default([]) }}"
  when: nxs_update_r_proxy_repos | length > 0

- name: Update configured R Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: r
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_r_group_repos | default([]) }}"
  when: nxs_update_r_group_repos | length > 0

- name: Delete R Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_r_hosted_repos | default([]) }}"
    format: r
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_r_hosted_repos | default([]) }}"
  when: nxs_delete_r_hosted_repos | length > 0

- name: Delete R Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_r_proxy_repos | default([]) }}"
    format: r
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_r_proxy_repos | default([]) }}"
  when: nxs_delete_r_proxy_repos | length > 0

- name: Delete R Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_r_group_repos | default([]) }}"
    format: r
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_r_group_repos | default([]) }}"
  when: nxs_delete_r_group_repos | length > 0
############ End R hosted, proxy and group Repositories ############

############ NuGet hosted, proxy and group Repositories ############

- name: Process definitions for NuGet
  # test this conditional
  when: nexus_config_nuget | bool
  block:
    - name: Apply defaults to NuGet hosted repos
      ansible.builtin.set_fact:
        nxs_desired_nuget_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_nuget_hosted -%}
            {%- set combined_repo = __nexus_repos_nuget_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to NuGet proxy repos
      ansible.builtin.set_fact:
        nxs_desired_nuget_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_nuget_proxy -%}
            {%- set combined_repo = __nexus_repos_nuget_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to NuGet group repos
      ansible.builtin.set_fact:
        nxs_desired_nuget_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_nuget_group -%}
            {%- set combined_repo = __nexus_repos_nuget_group_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing NuGet repositories
  ansible.builtin.set_fact:
    __nxs_crnt_nuget_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'nuget') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_nuget_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'nuget') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_nuget_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'nuget') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_nuget_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_nuget_hstd__

- name: Show __nxs_crnt_nuget_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_nuget_prxy__

- name: Show __nxs_crnt_nuget_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_nuget_grp__

- name: Determine NuGet repositories to create
  ansible.builtin.set_fact:
    nxs_create_nuget_hosted_repos: "{{ nxs_desired_nuget_hosted_repos | rejectattr('name', 'in', __nxs_crnt_nuget_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_nuget_proxy_repos: "{{ nxs_desired_nuget_proxy_repos | rejectattr('name', 'in', __nxs_crnt_nuget_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_nuget_group_repos: "{{ nxs_desired_nuget_group_repos | rejectattr('name', 'in', __nxs_crnt_nuget_grp__ | map(attribute='name') | list) | list }}"

- name: Determine NuGet repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_nuget_hosted_repos: "{{ __nxs_crnt_nuget_hstd__ | rejectattr('name', 'in', nxs_desired_nuget_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_nuget_proxy_repos: "{{ __nxs_crnt_nuget_prxy__ | rejectattr('name', 'in', nxs_desired_nuget_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_nuget_group_repos: "{{ __nxs_crnt_nuget_grp__ | rejectattr('name', 'in', nxs_desired_nuget_group_repos | map(attribute='name') | list) | list }}"

- name: Compare NuGet hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_nuget_hosted_repos: "{{ nxs_update_nuget_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_nuget_hosted_repos | list }}"
  when: >
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('nuget') != item.format | default('nuget') or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_nuget_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare NuGet proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_nuget_proxy_repos: "{{ nxs_update_nuget_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_nuget_proxy_repos | list }}"
  when: >
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('nuget') != item.format | default('nuget') or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).nugetProxy.queryCacheItemMaxAge | default(omit) != item.nugetProxy.queryCacheItemMaxAge | default(None) or
    (__nxs_crnt_nuget_prxy__ | selectattr('name', 'equalto', item.name) | first).nugetProxy.nugetVersion | default(omit) != item.nugetProxy.nugetVersion | default(None)

- name: Compare NuGet group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_nuget_group_repos: "{{ nxs_update_nuget_group_repos + [item] }}"
  loop: "{{ nxs_desired_nuget_group_repos | list }}"
  when: >
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('nuget') != item.format | default('nuget') or
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_nuget_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([])

- name: Show nxs_create_nuget_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_nuget_hosted_repos | length

- name: Show nxs_update_nuget_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_nuget_hosted_repos | length

- name: Show nxs_delete_nuget_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_nuget_hosted_repos | length

- name: Show nxs_create_nuget_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_nuget_proxy_repos | length

- name: Show nxs_update_nuget_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_nuget_proxy_repos | length

- name: Show nxs_delete_nuget_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_nuget_proxy_repos | length

- name: Show nxs_create_nuget_group_repos
  ansible.builtin.debug:
    var: nxs_create_nuget_group_repos | length

- name: Show nxs_update_nuget_group_repos
  ansible.builtin.debug:
    var: nxs_update_nuget_group_repos | length

- name: Show nxs_delete_nuget_group_repos
  ansible.builtin.debug:
    var: nxs_delete_nuget_group_repos | length

- name: Create configured NuGet Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: nuget
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_nuget_hosted_repos | default([]) }}"
  when: nxs_create_nuget_hosted_repos | length > 0

- name: Create configured NuGet Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: nuget
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_nuget_proxy_repos | default([]) }}"
  when: nxs_create_nuget_proxy_repos | length > 0

- name: Create configured NuGet Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: nuget
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_nuget_group_repos | default([]) }}"
  when: nxs_create_nuget_group_repos | length > 0

- name: Update configured NuGet Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: nuget
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_nuget_hosted_repos | default([]) }}"
  when: nxs_update_nuget_hosted_repos | length > 0

- name: Update configured NuGet Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: nuget
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_nuget_proxy_repos | default([]) }}"
  when: nxs_update_nuget_proxy_repos | length > 0

- name: Update configured NuGet Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: nuget
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_nuget_group_repos | default([]) }}"
  when: nxs_update_nuget_group_repos | length > 0

- name: Delete NuGet Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_nuget_hosted_repos | default([]) }}"
    format: nuget
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_nuget_hosted_repos | default([]) }}"
  when: nxs_delete_nuget_hosted_repos | length > 0

- name: Delete NuGet Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_nuget_proxy_repos | default([]) }}"
    format: nuget
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_nuget_proxy_repos | default([]) }}"
  when: nxs_delete_nuget_proxy_repos | length > 0

- name: Delete NuGet Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_nuget_group_repos | default([]) }}"
    format: nuget
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_nuget_group_repos | default([]) }}"
  when: nxs_delete_nuget_group_repos | length > 0
############ End NuGet hosted, proxy and group Repositories ############

############ APT hosted and proxy Repositories ############

- name: Process definitions for APT
  # test this conditional
  when: nexus_config_apt | bool
  block:
    - name: Apply defaults to APT hosted repos
      ansible.builtin.set_fact:
        nxs_desired_apt_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_apt_hosted -%}
            {%- set combined_repo = __nexus_repos_apt_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to APT proxy repos
      ansible.builtin.set_fact:
        nxs_desired_apt_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_apt_proxy -%}
            {%- set combined_repo = __nexus_repos_apt_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing APT repositories
  ansible.builtin.set_fact:
    __nxs_crnt_apt_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'apt') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_apt_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'apt') | selectattr('type', 'equalto', 'proxy') | list }}"

- name: Show __nxs_crnt_apt_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_apt_hstd__

- name: Show __nxs_crnt_apt_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_apt_prxy__

- name: Determine APT repositories to create
  ansible.builtin.set_fact:
    nxs_create_apt_hosted_repos: "{{ nxs_desired_apt_hosted_repos | rejectattr('name', 'in', __nxs_crnt_apt_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_apt_proxy_repos: "{{ nxs_desired_apt_proxy_repos | rejectattr('name', 'in', __nxs_crnt_apt_prxy__ | map(attribute='name') | list) | list }}"

- name: Determine APT repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_apt_hosted_repos: "{{ __nxs_crnt_apt_hstd__ | rejectattr('name', 'in', nxs_desired_apt_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_apt_proxy_repos: "{{ __nxs_crnt_apt_prxy__ | rejectattr('name', 'in', nxs_desired_apt_proxy_repos | map(attribute='name') | list) | list }}"

- name: Compare APT hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_apt_hosted_repos: "{{ nxs_update_apt_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_apt_hosted_repos | list }}"
  when: >
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('apt') != item.format | default('apt') or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false) or
    (__nxs_crnt_apt_hstd__ | selectattr('name', 'equalto', item.name) | first).apt.distribution | default(omit) != item.apt.distribution | default(None)

- name: Compare APT proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_apt_proxy_repos: "{{ nxs_update_apt_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_apt_proxy_repos | list }}"
  when: >
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('apt') != item.format | default('apt') or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).apt.distribution | default(omit) != item.apt.distribution | default(None) or
    (__nxs_crnt_apt_prxy__ | selectattr('name', 'equalto', item.name) | first).apt.flat | default(false) != item.apt.flat | default(false)

- name: Show nxs_create_apt_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_apt_hosted_repos | length

- name: Show nxs_update_apt_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_apt_hosted_repos | length

- name: Show nxs_delete_apt_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_apt_hosted_repos | length

- name: Show nxs_create_apt_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_apt_proxy_repos | length

- name: Show nxs_update_apt_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_apt_proxy_repos | length

- name: Show nxs_delete_apt_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_apt_proxy_repos | length

- name: Create configured APT Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: apt
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_apt_hosted_repos | default([]) }}"
  when: nxs_create_apt_hosted_repos | length > 0

- name: Create configured APT Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: apt
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_apt_proxy_repos | default([]) }}"
  when: nxs_create_apt_proxy_repos | length > 0

- name: Update configured APT Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: apt
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_apt_hosted_repos | default([]) }}"
  when: nxs_update_apt_hosted_repos | length > 0

- name: Update configured APT Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: apt
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_apt_proxy_repos | default([]) }}"
  when: nxs_update_apt_proxy_repos | length > 0

- name: Delete APT Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_apt_hosted_repos | default([]) }}"
    format: apt
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_apt_hosted_repos | default([]) }}"
  when: nxs_delete_apt_hosted_repos | length > 0

- name: Delete APT Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_apt_proxy_repos | default([]) }}"
    format: apt
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_apt_proxy_repos | default([]) }}"
  when: nxs_delete_apt_proxy_repos | length > 0
############ End APT hosted and proxy Repositories ############

############ Yum hosted, proxy and group Repositories ############

- name: Process definitions for Yum
  # test this conditional
  when: nexus_config_yum | bool
  block:
    - name: Apply defaults to Yum hosted repos
      ansible.builtin.set_fact:
        nxs_desired_yum_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_yum_hosted -%}
            {%- set combined_repo = __nexus_repos_yum_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to Yum proxy repos
      ansible.builtin.set_fact:
        nxs_desired_yum_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_yum_proxy -%}
            {%- set combined_repo = __nexus_repos_yum_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to Yum group repos
      ansible.builtin.set_fact:
        nxs_desired_yum_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_yum_group -%}
            {%- set combined_repo = __nexus_repos_yum_group_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing Yum repositories
  ansible.builtin.set_fact:
    __nxs_crnt_yum_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'yum') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_yum_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'yum') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_yum_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'yum') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_yum_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_yum_hstd__

- name: Show __nxs_crnt_yum_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_yum_prxy__

- name: Show __nxs_crnt_yum_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_yum_grp__

- name: Determine Yum repositories to create
  ansible.builtin.set_fact:
    nxs_create_yum_hosted_repos: "{{ nxs_desired_yum_hosted_repos | rejectattr('name', 'in', __nxs_crnt_yum_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_yum_proxy_repos: "{{ nxs_desired_yum_proxy_repos | rejectattr('name', 'in', __nxs_crnt_yum_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_yum_group_repos: "{{ nxs_desired_yum_group_repos | rejectattr('name', 'in', __nxs_crnt_yum_grp__ | map(attribute='name') | list) | list }}"

- name: Determine Yum repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_yum_hosted_repos: "{{ __nxs_crnt_yum_hstd__ | rejectattr('name', 'in', nxs_desired_yum_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_yum_proxy_repos: "{{ __nxs_crnt_yum_prxy__ | rejectattr('name', 'in', nxs_desired_yum_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_yum_group_repos: "{{ __nxs_crnt_yum_grp__ | rejectattr('name', 'in', nxs_desired_yum_group_repos | map(attribute='name') | list) | list }}"

- name: Compare Yum hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_yum_hosted_repos: "{{ nxs_update_yum_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_yum_hosted_repos | list }}"
  when: >
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('yum') != item.format | default('yum') or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false) or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).yum.repodataDepth | default(omit) != item.yum.repodataDepth | default(None) or
    (__nxs_crnt_yum_hstd__ | selectattr('name', 'equalto', item.name) | first).yum.deployPolicy | default(omit) != item.yum.deployPolicy | default(None)

- name: Compare Yum proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_yum_proxy_repos: "{{ nxs_update_yum_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_yum_proxy_repos | list }}"
  when: >
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('yum') != item.format | default('yum') or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_yum_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare Yum group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_yum_group_repos: "{{ nxs_update_yum_group_repos + [item] }}"
  loop: "{{ nxs_desired_yum_group_repos | list }}"
  when: >
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('yum') != item.format | default('yum') or
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_yum_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([])

- name: Show nxs_create_yum_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_yum_hosted_repos | length

- name: Show nxs_update_yum_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_yum_hosted_repos | length

- name: Show nxs_delete_yum_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_yum_hosted_repos | length

- name: Show nxs_create_yum_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_yum_proxy_repos | length

- name: Show nxs_update_yum_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_yum_proxy_repos | length

- name: Show nxs_delete_yum_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_yum_proxy_repos | length

- name: Show nxs_create_yum_group_repos
  ansible.builtin.debug:
    var: nxs_create_yum_group_repos | length

- name: Show nxs_update_yum_group_repos
  ansible.builtin.debug:
    var: nxs_update_yum_group_repos | length

- name: Show nxs_delete_yum_group_repos
  ansible.builtin.debug:
    var: nxs_delete_yum_group_repos | length

- name: Create configured Yum Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: yum
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_yum_hosted_repos | default([]) }}"
  when: nxs_create_yum_hosted_repos | length > 0

- name: Create configured Yum Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: yum
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_yum_proxy_repos | default([]) }}"
  when: nxs_create_yum_proxy_repos | length > 0

- name: Create configured Yum Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: yum
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_yum_group_repos | default([]) }}"
  when: nxs_create_yum_group_repos | length > 0

- name: Update configured Yum Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: yum
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_yum_hosted_repos | default([]) }}"
  when: nxs_update_yum_hosted_repos | length > 0

- name: Update configured Yum Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: yum
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_yum_proxy_repos | default([]) }}"
  when: nxs_update_yum_proxy_repos | length > 0

- name: Update configured Yum Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: yum
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_yum_group_repos | default([]) }}"
  when: nxs_update_yum_group_repos | length > 0

- name: Delete Yum Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_yum_hosted_repos | default([]) }}"
    format: yum
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_yum_hosted_repos | default([]) }}"
  when: nxs_delete_yum_hosted_repos | length > 0

- name: Delete Yum Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_yum_proxy_repos | default([]) }}"
    format: yum
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_yum_proxy_repos | default([]) }}"
  when: nxs_delete_yum_proxy_repos | length > 0

- name: Delete Yum Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_yum_group_repos | default([]) }}"
    format: yum
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_yum_group_repos | default([]) }}"
  when: nxs_delete_yum_group_repos | length > 0
############ End Yum hosted, proxy and group Repositories ############

############ raw hosted, proxy and group Repositories ############

- name: Process definitions for raw
  # test this conditional
  when: nexus_config_raw | bool
  block:
    - name: Apply defaults to raw hosted repos
      ansible.builtin.set_fact:
        nxs_desired_raw_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_raw_hosted -%}
            {%- set combined_repo = __nexus_repos_raw_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to raw proxy repos
      ansible.builtin.set_fact:
        nxs_desired_raw_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_raw_proxy -%}
            {%- set combined_repo = __nexus_repos_raw_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to raw group repos
      ansible.builtin.set_fact:
        nxs_desired_raw_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_raw_group -%}
            {%- set combined_repo = __nexus_repos_raw_group_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing raw repositories
  ansible.builtin.set_fact:
    __nxs_crnt_raw_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'raw') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_raw_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'raw') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_raw_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'raw') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_raw_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_raw_hstd__

- name: Show __nxs_crnt_raw_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_raw_prxy__

- name: Show __nxs_crnt_raw_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_raw_grp__

- name: Determine raw repositories to create
  ansible.builtin.set_fact:
    nxs_create_raw_hosted_repos: "{{ nxs_desired_raw_hosted_repos | rejectattr('name', 'in', __nxs_crnt_raw_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_raw_proxy_repos: "{{ nxs_desired_raw_proxy_repos | rejectattr('name', 'in', __nxs_crnt_raw_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_raw_group_repos: "{{ nxs_desired_raw_group_repos | rejectattr('name', 'in', __nxs_crnt_raw_grp__ | map(attribute='name') | list) | list }}"

- name: Determine raw repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_raw_hosted_repos: "{{ __nxs_crnt_raw_hstd__ | rejectattr('name', 'in', nxs_desired_raw_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_raw_proxy_repos: "{{ __nxs_crnt_raw_prxy__ | rejectattr('name', 'in', nxs_desired_raw_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_raw_group_repos: "{{ __nxs_crnt_raw_grp__ | rejectattr('name', 'in', nxs_desired_raw_group_repos | map(attribute='name') | list) | list }}"

- name: Compare raw hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_raw_hosted_repos: "{{ nxs_update_raw_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_raw_hosted_repos | list }}"
  when: >
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('raw') != item.format | default('raw') or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_raw_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare raw proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_raw_proxy_repos: "{{ nxs_update_raw_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_raw_proxy_repos | list }}"
  when: >
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('raw') != item.format | default('raw') or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_raw_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare raw group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_raw_group_repos: "{{ nxs_update_raw_group_repos + [item] }}"
  loop: "{{ nxs_desired_raw_group_repos | list }}"
  when: >
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('raw') != item.format | default('raw') or
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_raw_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([])

- name: Show nxs_create_raw_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_raw_hosted_repos | length

- name: Show nxs_update_raw_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_raw_hosted_repos | length

- name: Show nxs_delete_raw_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_raw_hosted_repos | length

- name: Show nxs_create_raw_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_raw_proxy_repos | length

- name: Show nxs_update_raw_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_raw_proxy_repos | length

- name: Show nxs_delete_raw_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_raw_proxy_repos | length

- name: Show nxs_create_raw_group_repos
  ansible.builtin.debug:
    var: nxs_create_raw_group_repos | length

- name: Show nxs_update_raw_group_repos
  ansible.builtin.debug:
    var: nxs_update_raw_group_repos | length

- name: Show nxs_delete_raw_group_repos
  ansible.builtin.debug:
    var: nxs_delete_raw_group_repos | length

- name: Create configured raw Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: raw
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_raw_hosted_repos | default([]) }}"
  when: nxs_create_raw_hosted_repos | length > 0

- name: Create configured raw Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: raw
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_raw_proxy_repos | default([]) }}"
  when: nxs_create_raw_proxy_repos | length > 0

- name: Create configured raw Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: raw
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_raw_group_repos | default([]) }}"
  when: nxs_create_raw_group_repos | length > 0

- name: Update configured raw Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: raw
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_raw_hosted_repos | default([]) }}"
  when: nxs_update_raw_hosted_repos | length > 0

- name: Update configured raw Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: raw
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_raw_proxy_repos | default([]) }}"
  when: nxs_update_raw_proxy_repos | length > 0

- name: Update configured raw Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: raw
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_raw_group_repos | default([]) }}"
  when: nxs_update_raw_group_repos | length > 0

- name: Delete raw Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_raw_hosted_repos | default([]) }}"
    format: raw
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_raw_hosted_repos | default([]) }}"
  when: nxs_delete_raw_hosted_repos | length > 0

- name: Delete raw Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_raw_proxy_repos | default([]) }}"
    format: raw
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_raw_proxy_repos | default([]) }}"
  when: nxs_delete_raw_proxy_repos | length > 0

- name: Delete raw Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_raw_group_repos | default([]) }}"
    format: raw
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_raw_group_repos | default([]) }}"
  when: nxs_delete_raw_group_repos | length > 0
############ End raw hosted, proxy and group Repositories ############

############ p2 proxy Repositories ############

- name: Process definitions for p2
  # test this conditional
  when: nexus_config_p2 | bool
  block:
    - name: Apply defaults to p2 proxy repos
      ansible.builtin.set_fact:
        nxs_desired_p2_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_p2_proxy -%}
            {%- set combined_repo = __nexus_repos_p2_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing p2 repositories
  ansible.builtin.set_fact:
    __nxs_crnt_p2_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'p2') | selectattr('type', 'equalto', 'proxy') | list }}"

- name: Show __nxs_crnt_p2_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_p2_prxy__

- name: Determine p2 repositories to create
  ansible.builtin.set_fact:
    nxs_create_p2_proxy_repos: "{{ nxs_desired_p2_proxy_repos | rejectattr('name', 'in', __nxs_crnt_p2_prxy__ | map(attribute='name') | list) | list }}"

- name: Determine p2 repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_p2_proxy_repos: "{{ __nxs_crnt_p2_prxy__ | rejectattr('name', 'in', nxs_desired_p2_proxy_repos | map(attribute='name') | list) | list }}"

- name: Compare p2 proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_p2_proxy_repos: "{{ nxs_update_p2_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_p2_proxy_repos | list }}"
  when: >
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('p2') != item.format | default('p2') or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Show nxs_create_p2_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_p2_proxy_repos | length

- name: Show nxs_update_p2_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_p2_proxy_repos | length

- name: Show nxs_delete_p2_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_p2_proxy_repos | length

- name: Create configured p2 Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: p2
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_p2_proxy_repos | default([]) }}"
  when: nxs_create_p2_proxy_repos | length > 0

- name: Update configured p2 Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: p2
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_p2_proxy_repos | default([]) }}"
  when: nxs_update_p2_proxy_repos | length > 0

- name: Delete p2 Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_p2_proxy_repos | default([]) }}"
    format: p2
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_p2_proxy_repos | default([]) }}"
  when: nxs_delete_p2_proxy_repos | length > 0
############ End p2 proxy Repositories ############

############ cocoapods proxy Repositories ############

- name: Process definitions for cocoapods
  # test this conditional
  when: nexus_config_cocoapods | bool
  block:
    - name: Apply defaults to cocoapods proxy repos
      ansible.builtin.set_fact:
        nxs_desired_cocoapods_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_cocoapods_proxy -%}
            {%- set combined_repo = __nexus_repos_cocoapods_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing cocoapods repositories
  ansible.builtin.set_fact:
    __nxs_crnt_cocoapods_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'cocoapods') | selectattr('type', 'equalto', 'proxy') | list }}"

- name: Show __nxs_crnt_cocoapods_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_cocoapods_prxy__

- name: Determine cocoapods repositories to create
  ansible.builtin.set_fact:
    nxs_create_cocoapods_proxy_repos: "{{ nxs_desired_cocoapods_proxy_repos | rejectattr('name', 'in', __nxs_crnt_cocoapods_prxy__ | map(attribute='name') | list) | list }}"

- name: Determine cocoapods repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_cocoapods_proxy_repos: "{{ __nxs_crnt_cocoapods_prxy__ | rejectattr('name', 'in', nxs_desired_cocoapods_proxy_repos | map(attribute='name') | list) | list }}"

- name: Compare cocoapods proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_cocoapods_proxy_repos: "{{ nxs_update_cocoapods_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_cocoapods_proxy_repos | list }}"
  when: >
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('cocoapods') != item.format | default('cocoapods') or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_cocoapods_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Show nxs_create_cocoapods_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_cocoapods_proxy_repos | length

- name: Show nxs_update_cocoapods_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_cocoapods_proxy_repos | length

- name: Show nxs_delete_cocoapods_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_cocoapods_proxy_repos | length

- name: Create configured cocoapods Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: cocoapods
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_cocoapods_proxy_repos | default([]) }}"
  when: nxs_create_cocoapods_proxy_repos | length > 0

- name: Update configured cocoapods Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: cocoapods
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_cocoapods_proxy_repos | default([]) }}"
  when: nxs_update_cocoapods_proxy_repos | length > 0

- name: Delete cocoapods Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_cocoapods_proxy_repos | default([]) }}"
    format: cocoapods
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_cocoapods_proxy_repos | default([]) }}"
  when: nxs_delete_cocoapods_proxy_repos | length > 0
############ End cocoapods proxy Repositories ############

############ conan hosted and proxy Repositories ############

- name: Process definitions for conan
  # test this conditional
  when: nexus_config_conan | bool
  block:
    - name: Apply defaults to conan hosted repos
      ansible.builtin.set_fact:
        nxs_desired_conan_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_conan_hosted -%}
            {%- set combined_repo = __nexus_repos_conan_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to conan proxy repos
      ansible.builtin.set_fact:
        nxs_desired_conan_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_conan_proxy -%}
            {%- set combined_repo = __nexus_repos_conan_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing conan repositories
  ansible.builtin.set_fact:
    __nxs_crnt_conan_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'conan') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_conan_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'conan') | selectattr('type', 'equalto', 'proxy') | list }}"

- name: Show __nxs_crnt_conan_hstd__
  ansible.builtin.debug:
    var: __nxs_crnt_conan_hstd__

- name: Show __nxs_crnt_conan_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_conan_prxy__

- name: Determine conan repositories to create
  ansible.builtin.set_fact:
    nxs_create_conan_hosted_repos: "{{ nxs_desired_conan_hosted_repos | rejectattr('name', 'in', __nxs_crnt_conan_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_conan_proxy_repos: "{{ nxs_desired_conan_proxy_repos | rejectattr('name', 'in', __nxs_crnt_conan_prxy__ | map(attribute='name') | list) | list }}"

- name: Determine conan repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_conan_hosted_repos: "{{ __nxs_crnt_conan_hstd__ | rejectattr('name', 'in', nxs_desired_conan_hosted_repos | map(attribute='name') | list) | list }}"
    nxs_delete_conan_proxy_repos: "{{ __nxs_crnt_conan_prxy__ | rejectattr('name', 'in', nxs_desired_conan_proxy_repos | map(attribute='name') | list) | list }}"

- name: Compare conan hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_conan_hosted_repos: "{{ nxs_update_conan_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_conan_hosted_repos | list }}"
  when: >
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('conan') != item.format | default('conan') or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_conan_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Compare conan proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_conan_proxy_repos: "{{ nxs_update_conan_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_conan_proxy_repos | list }}"
  when: >
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('conan') != item.format | default('conan') or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_conan_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Show nxs_create_conan_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_conan_hosted_repos | length

- name: Show nxs_create_conan_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_conan_proxy_repos | length

- name: Show nxs_update_conan_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_conan_hosted_repos | length

- name: Show nxs_update_conan_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_conan_proxy_repos | length

- name: Show nxs_delete_conan_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_conan_hosted_repos | length

- name: Show nxs_delete_conan_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_conan_proxy_repos | length

- name: Create configured conan Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: conan
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_conan_hosted_repos | default([]) }}"
  when: nxs_create_conan_hosted_repos | length > 0

- name: Create configured conan Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: conan
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_conan_proxy_repos | default([]) }}"
  when: nxs_create_conan_proxy_repos | length > 0

- name: Update configured conan Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: conan
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_conan_hosted_repos | default([]) }}"
  when: nxs_update_conan_hosted_repos | length > 0

- name: Update configured conan Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: conan
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_conan_proxy_repos | default([]) }}"
  when: nxs_update_conan_proxy_repos | length > 0

- name: Delete conan Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_conan_hosted_repos | default([]) }}"
    format: conan
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_conan_hosted_repos | default([]) }}"
  when: nxs_delete_conan_hosted_repos | length > 0

- name: Delete conan Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_conan_proxy_repos | default([]) }}"
    format: conan
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_conan_proxy_repos | default([]) }}"
  when: nxs_delete_conan_proxy_repos | length > 0
############ End conan hosted and proxy Repositories ############

############ go proxy and group Repositories ############

- name: Process definitions for go
  # test this conditional
  when: nexus_config_go | bool
  block:
    - name: Apply defaults to go proxy repos
      ansible.builtin.set_fact:
        nxs_desired_go_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_go_proxy -%}
            {%- set combined_repo = __nexus_repos_go_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to go group repos
      ansible.builtin.set_fact:
        nxs_desired_go_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_go_group -%}
            {%- set combined_repo = __nexus_repos_go_group_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing go repositories
  ansible.builtin.set_fact:
    __nxs_crnt_go_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'go') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_go_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'go') | selectattr('type', 'equalto', 'group') | list }}"

- name: Show __nxs_crnt_go_prxy__
  ansible.builtin.debug:
    var: __nxs_crnt_go_prxy__

- name: Show __nxs_crnt_go_grp__
  ansible.builtin.debug:
    var: __nxs_crnt_go_grp__

- name: Determine go repositories to create
  ansible.builtin.set_fact:
    nxs_create_go_proxy_repos: "{{ nxs_desired_go_proxy_repos | rejectattr('name', 'in', __nxs_crnt_go_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_go_group_repos: "{{ nxs_desired_go_group_repos | rejectattr('name', 'in', __nxs_crnt_go_grp__ | map(attribute='name') | list) | list }}"

- name: Determine go repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_go_proxy_repos: "{{ __nxs_crnt_go_prxy__ | rejectattr('name', 'in', nxs_desired_go_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_go_group_repos: "{{ __nxs_crnt_go_grp__ | rejectattr('name', 'in', nxs_desired_go_group_repos | map(attribute='name') | list) | list }}"

- name: Compare go proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_go_proxy_repos: "{{ nxs_update_go_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_go_proxy_repos | list }}"
  when: >
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('go') != item.format | default('go') or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare go group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_go_group_repos: "{{ nxs_update_go_group_repos + [item] }}"
  loop: "{{ nxs_desired_go_group_repos | list }}"
  when: >
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('go') != item.format | default('go') or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) | sort != item.group.memberNames | default([]) | sort

- name: Show nxs_create_go_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_go_proxy_repos | length

- name: Show nxs_create_go_group_repos
  ansible.builtin.debug:
    var: nxs_create_go_group_repos | length

- name: Show nxs_update_go_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_go_proxy_repos | length

- name: Show nxs_update_go_group_repos
  ansible.builtin.debug:
    var: nxs_update_go_group_repos | length

- name: Show nxs_delete_go_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_go_proxy_repos | length

- name: Show nxs_delete_go_group_repos
  ansible.builtin.debug:
    var: nxs_delete_go_group_repos | length

- name: Create configured go Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_go_proxy_repos | default([]) }}"
  when: nxs_create_go_proxy_repos | length > 0

- name: Create configured go Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_go_group_repos | default([]) }}"
  when: nxs_create_go_group_repos | length > 0

- name: Update configured go Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_go_proxy_repos | default([]) }}"
  when: nxs_update_go_proxy_repos | length > 0

- name: Update configured go Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_go_group_repos | default([]) }}"
  when: nxs_update_go_group_repos | length > 0

- name: Delete go Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_go_proxy_repos | default([]) }}"
    format: go
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_go_proxy_repos | default([]) }}"
  when: nxs_delete_go_proxy_repos | length > 0

- name: Delete go Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_go_group_repos | default([]) }}"
    format: go
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_go_group_repos | default([]) }}"
  when: nxs_delete_go_group_repos | length > 0
############ End go proxy and group Repositories ############

