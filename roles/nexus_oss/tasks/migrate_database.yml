---
# TODO: Skip this task if the migration is already done or postgres is already used
- name: Ensure temp dir /db-migrator-export exists and is owned by nexus user
  ansible.builtin.file:
    path: "{{ nexus_migrate_tmp_dir }}/db-migrator-export"
    state: directory
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0755"
  tags: nexus-migrate
  when: nexus_migrate_database | default(false) | bool


- name: Download the Nexus database migration tool
  get_url:
    url: "{{ nexus_db_migrator_download_url }}/nexus-db-migrator-{{ nexus_db_migrator_version }}.jar"
    dest: "{{ nexus_data_dir }}/db/nexus-db-migrator-{{ nexus_db_migrator_version }}.jar"
    mode: "0644"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
  tags: nexus-migrate, nexus-healthcheck

- name: Enable Pro version
  ansible.builtin.include_tasks: enable_pro_version.yml
  tags: nexus-migrate, nexus-healthcheck

- name: Stop Nexus service
  ansible.builtin.systemd:
    name: nexus.service
    state: stopped
  tags: nexus-migrate, nexus-healthcheck
  when: nexus_migrate_database | default(false) | bool

- name: Healthcheck
  ansible.builtin.command:
    cmd: "java -Xmx{{ nexus_db_migrator_maximum_memory }} -Xms{{ nexus_db_migrator_initial_memory }} -XX:+UseG1GC -XX:MaxDirectMemorySize=28672M -jar nexus-db-migrator-{{ nexus_db_migrator_version }}.jar --healthcheck --yes"
    chdir: "{{ nexus_data_dir }}/db"
  become: true
  become_user: "{{ nexus_os_user }}"
  register: migration_healthcheck
  tags: nexus-migrate, nexus-healthcheck
  when: nexus_migrate_database | default(false) | bool

- debug:
    var: migration_healthcheck.stdout_lines
  tags: nexus-migrate, nexus-healthcheck
  when: nexus_migrate_database | default(false) | bool

- name: Run migration
  ansible.builtin.command:
    cmd: >
      java -Xmx{{ nexus_db_migrator_maximum_memory }} -Xms{{ nexus_db_migrator_initial_memory }} -XX:+UseG1GC -XX:MaxDirectMemorySize=28672M -Djava.io.tmpdir="{{ nexus_migrate_tmp_dir }}/db-migrator-export"
      -jar nexus-db-migrator-{{ nexus_db_migrator_version }}.jar --yes
      --migration_type="{{ nexus_migration_type }}"
      --db_url="jdbc:postgresql://{{ nexus_postgres_db_host }}:{{ nexus_postgres_db_port }}/{{ nexus_postgres_db_name }}?user={{ nexus_postgres_db_username }}&password={{ nexus_postgres_db_password }}"
      --content_migration="{{ nexus_migrate_content_migration }}"
      --logging.level.com.sonatype=TRACE
      --export_json="{{ nexus_migrate_export_json | default('true')}}"
      --force="{{ nexus_migrate_force | ternary('true', 'true') | default('false')}}"
    chdir: "{{ nexus_data_dir }}/db"
  become: true
  become_user: "{{ nexus_os_user }}"
  register: migration_result
  tags: nexus-migrate
  when: nexus_migrate_database | default(false) | bool

- debug:
    var: migration_result.stdout_lines
  tags: nexus-migrate
  when: nexus_migrate_database | default(false) | bool

- name: Set fact to enable Postgres right after migration
  set_fact:
    nexus_use_postgres_after_migration: true
  tags: nexus-migrate
  when: nexus_use_postgres_after_migration is not defined

- name: Configure Postgres as datastore
  ansible.builtin.include_tasks: enable_postgres.yml
  tags: nexus-migrate
